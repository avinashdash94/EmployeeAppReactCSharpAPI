{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adash\\\\Desktop\\\\Asp_Practice\\\\NodeJS_Practice\\\\ReactPractice\\\\First_FullReact_Project\\\\employee-app\\\\src\\\\components\\\\Employee.js\";\nimport React, { Component } from 'react';\nimport { Button, ButtonToolbar, Table } from 'react-bootstrap';\nimport { AddDepModal } from './AddDepModal';\nimport { EditDepModal } from './EditDepModal';\nexport class Employee extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      emps: [],\n      addModalShow: false,\n      editModalShow: false\n    }; // to initialise this we required to use super, AddModalShow Variable used to show the pop up by defaulst it is false on page rendering\n  }\n\n  componentDidMount() {\n    //It is a life cylcle metod which render when  all  components renders \n    this.refreshList();\n  }\n\n  componentDidUpdate() {\n    //It is a life cylcle metod which render when any state or property related to this property changed Like new data inserted for department it will reflet the change in the table\n    this.refreshList();\n  }\n\n  refreshList() {\n    //*******Get the value using api we created*******\n    fetch('https://localhost:44381/api/Employee').then(response => response.json()).then(data => {\n      this.setState({\n        emps: data\n      });\n    });\n  }\n\n  deleteDep(empid) {\n    if (window.confirm('Are you sure?')) {\n      fetch(\"https://localhost:44381/api/Employee/\" + empid, {\n        method: 'DELETE',\n        header: {\n          \"Accept\": \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      emps,\n      empid,\n      empname\n    } = this.state;\n\n    const addModalClose = () => this.setState({\n      addModalShow: false\n    }); // This mehod is used to change the state(when we click close button on popup) of pop up when we close the pop up menu;\n\n\n    const editModalClose = () => this.setState({\n      editModalShow: false\n    }); // This mehod is used to change the state(when we click close button on popup) of pop up when we close the pop up menu;\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: \"mt-4\",\n        striped: true,\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"EmployeeID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"EmployeeName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"MailID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Doj\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Option\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: emps.map(emp => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.EmployeeID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.EmployeeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.Department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.MailID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: emp.DOJ\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"info\",\n                  onClick: () => this.setState({\n                    editModalShow: true,\n                    empid: emp.EmployeeID,\n                    empname: emp.EmployeeName\n                  }),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"danger\",\n                  onClick: () => {\n                    this.deleteEmp(emp.EmployeeID);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(EditDepModal, {\n                  show: this.state.editModalShow,\n                  onHide: editModalClose,\n                  depid: depid,\n                  depname: depname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 25\n            }, this)]\n          }, emp.EmployeeID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => this.setState({\n            addModalShow: true\n          }),\n          children: \"Add Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(AddDepModal, {\n          show: this.state.addModalShow,\n          onHide: addModalClose //calling close function on hide event\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/adash/Desktop/Asp_Practice/NodeJS_Practice/ReactPractice/First_FullReact_Project/employee-app/src/components/Employee.js"],"names":["React","Component","Button","ButtonToolbar","Table","AddDepModal","EditDepModal","Employee","constructor","props","state","emps","addModalShow","editModalShow","componentDidMount","refreshList","componentDidUpdate","fetch","then","response","json","data","setState","deleteDep","empid","window","confirm","method","header","render","empname","addModalClose","editModalClose","map","emp","EmployeeID","EmployeeName","Department","MailID","DOJ","deleteEmp","depid","depname"],"mappings":"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","sourcesContent":["import React,{Component} from  'react';\r\nimport {Button, ButtonToolbar, Table} from 'react-bootstrap';\r\nimport {AddDepModal} from './AddDepModal';\r\nimport {EditDepModal} from './EditDepModal';\r\n\r\nexport class Employee extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {emps: [], addModalShow:false, editModalShow:false} // to initialise this we required to use super, AddModalShow Variable used to show the pop up by defaulst it is false on page rendering\r\n    }\r\n\r\n    componentDidMount(){ //It is a life cylcle metod which render when  all  components renders \r\n        this.refreshList();\r\n    }\r\n\r\n    componentDidUpdate(){ //It is a life cylcle metod which render when any state or property related to this property changed Like new data inserted for department it will reflet the change in the table\r\n        this.refreshList();\r\n    }\r\n\r\n    refreshList(){\r\n        //*******Get the value using api we created*******\r\n        fetch('https://localhost:44381/api/Employee')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            this.setState({emps:data});\r\n        });        \r\n    }\r\n\r\n    deleteDep(empid){\r\n        if(window.confirm('Are you sure?')){\r\n            fetch(\"https://localhost:44381/api/Employee/\" + empid,{\r\n                method: 'DELETE',\r\n                header: {\r\n                    \"Accept\": \"application/json\",\r\n                    \"Content-Type\": \"application/json\"\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const {emps, empid, empname} = this.state;\r\n        const addModalClose = ()=> this.setState({addModalShow: false});// This mehod is used to change the state(when we click close button on popup) of pop up when we close the pop up menu;\r\n        const editModalClose = ()=> this.setState({editModalShow: false});// This mehod is used to change the state(when we click close button on popup) of pop up when we close the pop up menu;\r\n\r\n        return(\r\n            <div>\r\n            <Table className=\"mt-4\" striped bordered hover size=\"sm\">\r\n                <thead>\r\n                    <td>EmployeeID</td>\r\n                    <td>EmployeeName</td>\r\n                    <td>Department</td>\r\n                    <td>MailID</td>\r\n                    <td>Doj</td>\r\n                    <td>Option</td>\r\n                </thead>\r\n                <tbody>\r\n                    {emps.map(emp=>\r\n                        <tr key = {emp.EmployeeID}> \r\n                        <td>{emp.EmployeeID}</td>\r\n                        <td>{emp.EmployeeName}</td>\r\n                        <td>{emp.Department}</td>\r\n                        <td>{emp.MailID}</td>\r\n                        <td>{emp.DOJ}</td>\r\n                        <td>\r\n                            <ButtonToolbar>\r\n                                <Button className=\"mr-2\"\r\n                                variant=\"info\"\r\n                                onClick={()=> this.setState({editModalShow:true, empid:emp.EmployeeID, empname:emp.EmployeeName})}>\r\n                                Edit</Button>\r\n                                <Button className=\"mr-2\"\r\n                                variant=\"danger\"\r\n                                onClick={()=> {this.deleteEmp(emp.EmployeeID);} }>\r\n                                Delete</Button>\r\n                                <EditDepModal\r\n                                    show = {this.state.editModalShow}\r\n                                    onHide = {editModalClose}\r\n                                    depid = {depid}\r\n                                    depname = {depname}\r\n                                />\r\n                            </ButtonToolbar>\r\n                        </td>\r\n                        </tr>                        \r\n                    )}\r\n                </tbody>\r\n            </Table>\r\n            <ButtonToolbar>            \r\n                <Button variant=\"primary\" onClick={()=> this.setState({addModalShow: true})}>Add Department</Button> {/* created function to set popup stae for open the popup */}                        \r\n                <AddDepModal\r\n                show={this.state.addModalShow}\r\n                onHide={addModalClose} //calling close function on hide event\r\n                />\r\n            </ButtonToolbar>  \r\n            </div>  \r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}