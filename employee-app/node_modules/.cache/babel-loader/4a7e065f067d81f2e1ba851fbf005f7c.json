{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adash\\\\Desktop\\\\Asp_Practice\\\\NodeJS_Practice\\\\ReactPractice\\\\First_FullReact_Project\\\\employee-app\\\\src\\\\components\\\\AddDepModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nexport class AddDepModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snakbarClose = event => {\n      // This method used when we close the snack bar on clicking close button\n      this.setState({\n        snackbaropen: false\n      });\n    };\n\n    this.state = {\n      snackbaropen: false,\n      snakbarmsg: ''\n    }; //This is used to track that when snakbar(it comes below for confirmation msg when we add department ) is opened \n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // console.log(event.target);\n    // console.log(event.target.DepartmentName);\n    // alert(event.target.DepartmentName.value);\n\n    fetch(\"https://localhost:44381/api/Department\", {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        //This is the Dep Oject we sent to Web Api\n        DepartmentID: null,\n        DepartmentName: event.target.DepartmentName.value\n      })\n    }).then(response => response.json()) //This is the response we get from Web Api\n    .then(result => {\n      alert(result);\n    }, error => {\n      alert('Failed');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'center',\n          horizontal: 'center'\n        } //It is  the snackbar to show success full add of fail\n        ,\n        open: this.state.snackbaropen,\n        autoHideDuration: 3000 // Time after when it will close automaticaly\n        ,\n        onClose: this.snakbarClose // If we click on close button\n        ,\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message\",\n          children: this.state.snakbarmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 22\n        }, this),\n        action: [/*#__PURE__*/_jsxDEV(IconButton, {\n          \"arial-label\": \"Close\",\n          color: \"inherit\",\n          onClick: this.snakbarClose\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this) // When we click on close button 'x' on snack bar\n        ]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Add Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"DepartmentName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Department Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"DepartmentName\",\n                    required: true,\n                    placeholder: \"DepartmentName\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    children: \"Add Department\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/adash/Desktop/Asp_Practice/NodeJS_Practice/ReactPractice/First_FullReact_Project/employee-app/src/components/AddDepModal.js"],"names":["React","Component","Modal","Button","Row","Col","Form","Snackbar","IconButton","AddDepModal","constructor","props","snakbarClose","event","setState","snackbaropen","state","snakbarmsg","handleSubmit","bind","preventDefault","fetch","method","headers","body","JSON","stringify","DepartmentID","DepartmentName","target","value","then","response","json","result","alert","error","render","vertical","horizontal","onHide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class AddDepModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {snackbaropen: false, snakbarmsg: ''}; //This is used to track that when snakbar(it comes below for confirmation msg when we add department ) is opened \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    snakbarClose = (event) =>{ // This method used when we close the snack bar on clicking close button\r\n        this.setState({snackbaropen: false});\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        // console.log(event.target);\r\n        // console.log(event.target.DepartmentName);\r\n        // alert(event.target.DepartmentName.value);\r\n        fetch(\"https://localhost:44381/api/Department\",{\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body:JSON.stringify({  //This is the Dep Oject we sent to Web Api\r\n                DepartmentID: null,\r\n                DepartmentName:event.target.DepartmentName.value\r\n            })\r\n        })\r\n        .then(response=> response.json()) //This is the response we get from Web Api\r\n        .then((result)=>{\r\n            alert(result);\r\n        },\r\n        (error)=>{\r\n            alert('Failed');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <Snackbar anchorOrigin={{vertical:'center', horizontal:'center'}}  //It is  the snackbar to show success full add of fail\r\n            open={this.state.snackbaropen}\r\n            autoHideDuration ={3000} // Time after when it will close automaticaly\r\n            onClose={this.snakbarClose} // If we click on close button\r\n            message={<span id=\"message\">{this.state.snakbarmsg}</span>}\r\n            action={[\r\n                <IconButton key=\"close\" arial-label=\"Close\" color=\"inherit\" onClick={this.snakbarClose}></IconButton> // When we click on close button 'x' on snack bar\r\n            ]}\r\n            />\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Add Department\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    \r\n                    <Row>\r\n                        <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"DepartmentName\">\r\n                            <Form.Label>Department Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"DepartmentName\" required placeholder=\"DepartmentName\" />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">Add Department</Button>\r\n                        </Form.Group>\r\n\r\n                        </Form>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}