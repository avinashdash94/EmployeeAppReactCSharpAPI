{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\adash\\\\Desktop\\\\Asp_Practice\\\\NodeJS_Practice\\\\ReactPractice\\\\First_FullReact_Project\\\\employee-app\\\\src\\\\components\\\\AddEmpModal.js\";\nimport React, { Component } from 'react';\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nexport class AddEmpModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.snakbarClose = event => {\n      // This method used when we close the snack bar on clicking close button\n      this.setState({\n        snackbaropen: false\n      });\n    };\n\n    this.state = {\n      deps: [],\n      snackbaropen: false,\n      snakbarmsg: ''\n    }; //This is used to track that when snakbar(it comes below for confirmation msg when we add department ) is opened \n\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    // call when render the cmponent\n    fetch(\"https://localhost:44381/api/Department\") // To get the data for department names for ddl  to insert new Employee\n    .then(response => response.json()).then(data => {\n      this.setState({\n        deps: data\n      });\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault(); // console.log(event.target);\n    // console.log(event.target.DepartmentName);\n    // alert(event.target.DepartmentName.value);\n\n    fetch(\"https://localhost:44381/api/Employee\", {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        //This is the Dep Oject we sent to Web Api\n        EmployeeID: null,\n        EmployeeName: event.target.EmployeeName.value,\n        Department: event.target.Department.value,\n        MailId: event.target.MailId.value,\n        DOJ: event.target.DOJ.value\n      })\n    }).then(response => response.json()) //This is the response we get from Web Api\n    .then(result => {\n      // alert(result);\n      this.setState({\n        snackbaropen: true,\n        snakbarmsg: result\n      });\n    }, error => {\n      // alert('Failed');\n      this.setState({\n        snackbaropen: true,\n        snakbarmsg: 'Failed'\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'center'\n        } //It is  the snackbar to show success full add of fail\n        ,\n        open: this.state.snackbaropen,\n        autoHideDuration: 3000 // Time after when it will close automaticaly\n        ,\n        onClose: this.snakbarClose // If we click on close button\n        ,\n        message: /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"message\",\n          children: this.state.snakbarmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 22\n        }, this),\n        action: [\n        /*#__PURE__*/\n        // To close the by click on 'X'\n        _jsxDEV(IconButton, {\n          \"arial-label\": \"Close\",\n          color: \"inherit\",\n          onClick: this.snakbarClose,\n          children: \"X\"\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this) // When we click on close button 'x' on snack bar\n        ]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Add Employee\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"EmployeeName\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Employee Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"EmployeeName\",\n                    required: true,\n                    placeholder: \"EmployeeName\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"Department\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Department\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    children: this.state.deps.map(dep => /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: dep.DepartmentName\n                    }, dep.DepartmentID, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 61\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"MailId\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"MailId\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"MailId\",\n                    required: true,\n                    placeholder: \"MailId\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"DOJ\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"DOJ\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    name: \"DOJ\",\n                    required: true,\n                    placeholder: \"DOJ\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    children: \"Add Employee\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: this.props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/adash/Desktop/Asp_Practice/NodeJS_Practice/ReactPractice/First_FullReact_Project/employee-app/src/components/AddEmpModal.js"],"names":["React","Component","Modal","Button","Row","Col","Form","Snackbar","IconButton","AddEmpModal","constructor","props","snakbarClose","event","setState","snackbaropen","state","deps","snakbarmsg","handleSubmit","bind","componentDidMount","fetch","then","response","json","data","preventDefault","method","headers","body","JSON","stringify","EmployeeID","EmployeeName","target","value","Department","MailId","DOJ","result","error","render","vertical","horizontal","map","dep","DepartmentName","DepartmentID","onHide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button, Row, Col, Form } from 'react-bootstrap';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport class AddEmpModal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {deps:[], snackbaropen: false, snakbarmsg: ''}; //This is used to track that when snakbar(it comes below for confirmation msg when we add department ) is opened \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount(){ // call when render the cmponent\r\n        fetch(\"https://localhost:44381/api/Department\")  // To get the data for department names for ddl  to insert new Employee\r\n        .then(response=> response.json())\r\n        .then(data =>{\r\n            this.setState({deps: data})\r\n        });\r\n    }\r\n\r\n    snakbarClose = (event) =>{ // This method used when we close the snack bar on clicking close button\r\n        this.setState({snackbaropen: false});\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        // console.log(event.target);\r\n        // console.log(event.target.DepartmentName);\r\n        // alert(event.target.DepartmentName.value);\r\n        fetch(\"https://localhost:44381/api/Employee\",{\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Accept\": \"application/json\",\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body:JSON.stringify({  //This is the Dep Oject we sent to Web Api\r\n                EmployeeID: null,\r\n                EmployeeName:event.target.EmployeeName.value,\r\n                Department:event.target.Department.value,\r\n                MailId:event.target.MailId.value,\r\n                DOJ:event.target.DOJ.value\r\n            })\r\n        })\r\n        .then(response=> response.json()) //This is the response we get from Web Api\r\n        .then((result)=>{\r\n           // alert(result);\r\n           this.setState({snackbaropen:true, snakbarmsg: result});\r\n        },\r\n        (error)=>{\r\n            // alert('Failed');\r\n           this.setState({snackbaropen:true, snakbarmsg: 'Failed'});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n            <Snackbar anchorOrigin={{vertical:'bottom', horizontal:'center'}}  //It is  the snackbar to show success full add of fail\r\n            open={this.state.snackbaropen}\r\n            autoHideDuration ={3000} // Time after when it will close automaticaly\r\n            onClose={this.snakbarClose} // If we click on close button\r\n            message={<span id=\"message\">{this.state.snakbarmsg}</span>}\r\n            action={[  // To close the by click on 'X'\r\n                <IconButton key=\"close\" arial-label=\"Close\" color=\"inherit\" onClick={this.snakbarClose}>X</IconButton> // When we click on close button 'x' on snack bar\r\n            ]}\r\n            />\r\n            <Modal\r\n                {...this.props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                        Add Employee\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>                    \r\n                    <Row>\r\n                        <Col sm={6}>\r\n                        <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"EmployeeName\">\r\n                            <Form.Label>Employee Name</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"EmployeeName\" required placeholder=\"EmployeeName\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"Department\">\r\n                            <Form.Label>Department</Form.Label>\r\n                            {/* create the ddl for department name using map method of array */}\r\n                            <Form.Control as=\"select\"> \r\n                                {this.state.deps.map(dep => <option key= {dep.DepartmentID}>{dep.DepartmentName}</option>)}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"MailId\">\r\n                            <Form.Label>MailId</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"MailId\" required placeholder=\"MailId\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"DOJ\">\r\n                            <Form.Label>DOJ</Form.Label>\r\n                            <Form.Control type=\"text\" name=\"DOJ\" required placeholder=\"DOJ\" />\r\n                        </Form.Group>\r\n\r\n\r\n                        <Form.Group>\r\n                            <Button variant=\"primary\" type=\"submit\">Add Employee</Button>\r\n                        </Form.Group>\r\n                        </Form>\r\n                        </Col>\r\n                    </Row>                    \r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={this.props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}